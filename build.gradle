plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id 'org.ajoberstar.grgit' version '3.1.1'
	id 'com.github.breadmoirai.github-release' version '2.2.12'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16
// Adds a few utility methods like getProjectProperty
apply from: 'https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/utilities.gradle'
apply from: 'https://raw.githubusercontent.com/NerdHubMC/Gradle-Scripts/master/scripts/fabric/publish/changelog.gradle'

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

//def apiModules = [
//		"fabric-api-base",
//		"fabric-resource-loader-v0",
//		"fabric-particles-v1"
//]

repositories {
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'dev\\.emi.*'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
	maven {
		url = 'https://maven.jamieswhiteshirt.com/libs-release/'
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}
	maven {
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
		content {
			includeGroup 'me.lucko'
		}
	}
	maven {
		url = 'https://jitpack.io'
		content {
			includeGroupByRegex '(com|io)\\.github\\..*'
		}
	}
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
//	apiModules.each {
//		modImplementation include(fabricApi.module(it, project.fabric_version))
//	}

	// Geckolib
	modImplementation 'software.bernie.geckolib:geckolib-fabric-1.17:3.0.5:dev'

//	// cloth config
//	modApi("me.shedaniel.cloth:config-2:4.8.2") {
//		exclude(group: "net.fabricmc.fabric-api")
//	}
//	include "me.shedaniel.cloth:config-2:4.8.2"

    modImplementation "io.github.ladysnake:requiem-api:${requiem_version}"
    modRuntime "io.github.ladysnake:requiem-core:${requiem_version}"
    modRuntime "io.github.ladysnake:requiem:${requiem_version}"

	// Made available when Requiem is present
	modCompileOnly "io.github.ladysnake:PlayerAbilityLib:${pal_version}"
	modCompileOnly "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:3.+"

	runtimeOnly "me.zeroeightsix:fiber:0.23.0-2"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

apply from: 'release.gradle'